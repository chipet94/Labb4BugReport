@using Labb4BugReport.Data.Models.Bugs
@using Labb4BugReport.Data.Shared.Requests
@using Labb4BugReport.FrontEnd.Services
@inject IBugReportService Service;
@if (_showContent)
{
    <EditForm Model="@_request" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <label>Title
            <InputText id="title" @bind-Value="_request.Title"/>
        </label>
        <label> Name
            <InputText id="name" @bind-Value="_request.PosterName"/>
        </label>
        <label>Description
            <InputTextArea id="description" @bind-Value="_request.Description" />
        </label>

        <button id="submitReportBtn" type="submit">Submit</button>
        <button id="cancelReportBtn"  @onclick="ToggleContent">Cancel</button>
    </EditForm>
}
else
{
    <button id="addReportButton" @onclick="ToggleContent">Add new report</button>
}
@code {
    [Parameter]
    public Action OnReportPosted { get; set; }
    private NewBugReportRequest _request = new NewBugReportRequest();

    
    private bool _showContent { get; set; } = false;
    

    private void ToggleContent()
    {
        _showContent = !_showContent;
    }
    private async void HandleValidSubmit()
    {
        try
        {
            await Service.Post(_request);
            ToggleContent();
            OnReportPosted?.Invoke();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }

    }
}